#include <stdio.h>

#define MAX_VERTICES 20

int a[MAX_VERTICES][MAX_VERTICES];
int q[MAX_VERTICES];
int visited[MAX_VERTICES];
int n, f = -1, r = -1;

void bfs(int v) {
    for (int i = 0; i < n; i++) {
        if (a[v][i] && !visited[i]) {
            r++;
            q[r] = i;
            visited[i] = 1;
            printf("%d ", i); 
        }
    }

    if (f <= r) {
        bfs(q[++f]);
    }
}

int main() {
    int v, i, j;

    printf("\nEnter the number of vertices: ");
    scanf("%d", &n);

    if (n > MAX_VERTICES) {
        printf("Error: Number of vertices exceeds limit (%d).\n", MAX_VERTICES);
        return 1;
    }

    for (i = 0; i < n; i++) {
        visited[i] = 0;
    }

    printf("\nEnter the adjacency matrix (0 or 1)\n");
    for (i = 0; i < n; i++) {
        for (j = 0; j < n; j++) {
            scanf("%d", &a[i][j]);
        }
    }

    printf("\nEnter the starting vertex (0 to %d): ", n - 1); 
    scanf("%d", &v);

    f = r = 0;
    q[r] = v;
    visited[v] = 1;
    printf("%d ", v);

    bfs(v);

    if (r != n - 1) {
        printf("\nBFS may not have explored all connected components.\n");
    }

    return 0;
}
